@page "/login"
@inject IAuthenticationService AuthService
@inject NavigationManager NavigationManager

@if (ShowErrors)
{
    <div class="alert alert-danger" role="alert">
        <p>@Error</p>
    </div>
}

<div class="ui middle aligned center aligned grid">
    <div class="column">
        <h2 class="ui image header">
            <div class="content">
                Log-in to your account
            </div>
        </h2>
        @*<form action="https://s.codepen.io/voltron2112/debug/PqrEPM?" method="get" class="ui large form">*@
        <EditForm Model="loginModel" OnValidSubmit="HandleLogin" class="ui large form">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="ui stacked secondary  segment">
                <div class="field">
                    <div class="ui left icon input">
                        <i class="user icon"></i>
                        <InputText Id="email" Class="form-control" @bind-Value="loginModel.UserName" />
                        <ValidationMessage For="@(() => loginModel.UserName)" />
                    </div>
                </div>
                <div class="field">
                    <div class="ui left icon input">
                        <i class="lock icon"></i>
                        <InputText Id="password" type="password" Class="form-control" @bind-Value="loginModel.Password" />
                        <ValidationMessage For="@(() => loginModel.Password)" />
                    </div>
                </div>
                <button type="submit" class="ui fluid large teal submit button">Submit</button>
            </div>
        </EditForm>

        <div class="ui message">
            New to us? <a href="https://s.codepen.io/voltron2112/debug/PqrEPM?">Register</a>
        </div>
    </div>
</div>


@*<div class="card">
        <div class="card-body">
            <h5 class="card-title">Please enter your details</h5>
            <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="form-group">
                    <label for="email">User Name</label>
                    <InputText Id="email" Class="form-control" @bind-Value="loginModel.UserName" />
                    <ValidationMessage For="@(() => loginModel.UserName)" />
                </div>
                <div class="form-group">
                    <label for="password">Password</label>
                    <InputText Id="password" type="password" Class="form-control" @bind-Value="loginModel.Password" />
                    <ValidationMessage For="@(() => loginModel.Password)" />
                </div>
                <button type="submit" class="btn btn-primary">Submit</button>
            </EditForm>
        </div>
    </div>*@

@code {

    private LoginModel loginModel = new LoginModel();
    private bool ShowErrors;
    private string Error = "";

    private async Task HandleLogin()
    {
        ShowErrors = false;

        var result = await AuthService.Login(loginModel);

        if (result.Successful)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            Error = result.Error;
            ShowErrors = true;
        }
    }

}