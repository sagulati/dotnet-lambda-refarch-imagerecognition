{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Transform": "AWS::Serverless-2016-10-31",
    "Description": "Defines an AWS Step Functions state machine, together with the Lambda functions used as tasks when the state machine runs. See state-machine.json for the actual machine definition.",

    "Parameters": {
        "PhotoRepoS3Bucket": {
            "Type" : "String",
            "Description": "s3 bucket for photo uploads"
            "Default" : "photo-sharee7fa5f1b25be4c63a81417becda53512182406-devf"
        },
        "GraphQLEndPoint": {
            "Type" : "String",
            "Description": "graph QL endpoint",
            "Default" : ""
        },
        "GraphQLAPIId": {
            "Type" : "String",
            "Description": "graph QL API ID",
            "Default" : ""
        },
        "Stage": {
            "Type" : "String",
            "Description": "Environment stage or git branch",
            "Default" : "Development"
        }
    },

    "Resources": {

        "ExtractImageMetadataFunction": {
            "Type": "AWS::Lambda::Function",
            "Description" : "Extract image metadata such as format, size, geolocation, etc.",
            "Properties": {
                "PackageType": "Image",
                "ImageConfig": {
                    "EntryPoint": [
                        "/lambda-entrypoint.sh"
                    ],
                    "Command": [
                        "extract-image-metadata::extract_image_metadata.Function::FunctionHandler"
                    ]
                },
                "Role": {
                    "Fn::GetAtt": [
                        "LambdaRole",
                        "Arn"
                    ]
                },
                "MemorySize": 1024,
                "Timeout": 200
            },
            "Metadata": {
                "Dockerfile": "extract-image-metadata/Dockerfile",
                "DockerContext": ".",
                "DockerTag": ""
            }
        },
        "TransformMetadataFunction": {
            "Type": "AWS::Lambda::Function",
            "Description" : "massages JSON of extracted image metadata",
            "Properties": {
                "PackageType": "Image",
                "Role": {
                    "Fn::GetAtt": [
                        "LambdaRole",
                        "Arn"
                    ]
                },
                "ImageConfig": {
                    "EntryPoint": [
                        "/lambda-entrypoint.sh"
                    ],
                    "Command": [
                        "transform-metadata::transform-metadata.Function::FunctionHandler"
                    ]
                },
                "MemorySize": 256,
                "Timeout": 60
            },
            "Metadata": {
                "Dockerfile": "transform-metadata/Dockerfile",
                "DockerContext": ".",
                "DockerTag": ""
            }
        },
        "StoreImageMetadataFunction": {
            "Type": "AWS::Lambda::Function",
            "Description" : "Store image metadata into database",
            "Properties": {
                "PackageType": "Image",
                "Role": {
                    "Fn::GetAtt": [
                        "LambdaRole",
                        "Arn"
                    ]
                },
                "ImageConfig": {
                    "EntryPoint": [
                        "/lambda-entrypoint.sh"
                    ],
                    "Command": [
                        "store-image-metadata::store-image-metadata.Function::FunctionHandler"
                    ]
                },
                "MemorySize": 512
            },
            "Metadata": {
                "Dockerfile": "store-image-metadata/Dockerfile",
                "DockerContext": ".",
                "DockerTag": ""
            }
        },
        "RekognitionFunction": {
            "Type": "AWS::Lambda::Function",
            "Description" : "Use Amazon Rekognition to detect labels from image",
            "Properties": {
                "PackageType": "Image",
                "ImageConfig": {
                    "EntryPoint": [
                        "/lambda-entrypoint.sh"
                    ],
                    "Command": [
                        "rekognition::rekognition.Function::FunctionHandler"
                    ]
                    },
                "Role": {
                    "Fn::GetAtt": [
                        "LambdaRole",
                        "Arn"
                    ]
                },
                "MemorySize": 256
            },
            "Metadata": {
                "Dockerfile": "rekognition/Dockerfile",
                "DockerContext": ".",
                "DockerTag": ""
            }
        },
        "GenerateThumbnailFunction": {
            "Type": "AWS::Lambda::Function",
            "Description" : "Generate thumbnails for images",
            "Properties": {
                "PackageType": "Image",
                "ImageConfig": {
                    "EntryPoint": [
                        "/lambda-entrypoint.sh"
                    ],
                    "Command": [
                        "thumbnail::thumbnail.Function::FunctionHandler"
                    ]
                    },
                "Role": {
                    "Fn::GetAtt": [
                        "LambdaRole",
                        "Arn"
                    ]
                },
                "MemorySize": 1536,
                "Timeout": 300
            },
            "Metadata": {
                "Dockerfile": "thumbnail/Dockerfile",
                "DockerContext": ".",
                "DockerTag": ""
            }
        },
        "StateMachine": {
            "Type": "AWS::StepFunctions::StateMachine",
            "Description" : "",
            "Properties": {
                "RoleArn": {
                    "Fn::GetAtt": [
                        "StateMachineRole",
                        "Arn"
                    ]
                },
                "DefinitionString": {
                    "Fn::Sub": ""
                }
            }
        },
        "LambdaRole": {
            "Type": "AWS::IAM::Role",
            "Description" : "",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            }
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                    "arn:aws:iam::aws:policy/AmazonS3FullAccess",
                    "arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess"
                ]
            }
        },

        "StateMachineRole": {
            "Type": "AWS::IAM::Role",
            "Description" : "",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": {
                                    "Fn::Sub": "states.${AWS::Region}.amazonaws.com"
                                }
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": "StepFunctionLambdaInvoke",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "lambda:InvokeFunction"
                                    ],
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ]
            }
        },
    }
}